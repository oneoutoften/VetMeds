from app.db_search import DrugSearch
from app.db_search.cascade_search import cascade_search
from app.database.connection import database


class DrugService:
    def __init__(self):
        self.drug_search = DrugSearch(database)

    async def search_drug(self, search_term: str) -> list:
        return await cascade_search(self.drug_search, search_term)

    async def format_drug_response(self, drugs: list) -> str:
        if not drugs:
            return '–ü—Ä–µ–ø–∞—Ä–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å.'

        response = []
        for drug in drugs:
            drug_info = f"üíä <b>{drug.name}</b>\n\n"

            if drug.active_ingredients:
                drug_info += f"<b>–ê–∫—Ç–∏–≤–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞:</b> {drug.active_ingredients}\n"
            if drug.analogs:
                drug_info += f"<b>–ê–Ω–∞–ª–æ–≥–∏:</b> {drug.analogs}\n"
            if drug.dosages:
                drug_info += f"<b>–î–æ–∑–∏—Ä–æ–≤–∫–∏:</b>\n{drug.dosages}\n"
            if drug.description:
                drug_info += f"<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>\n{drug.description}\n"
            if drug.notes:
                drug_info += f"<b>–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</b>\n{drug.notes}\n"
            response.append(drug_info)

        return response[0]

drug_service = DrugService()